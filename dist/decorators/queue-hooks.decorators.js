"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@nestjs/common");
const bull_constants_1 = require("../bull.constants");
const enums_1 = require("../enums");
exports.OnQueueEvent = (eventNameOrOptions) => common_1.SetMetadata(bull_constants_1.BULL_MODULE_ON_QUEUE_EVENT, typeof eventNameOrOptions === 'string'
    ? { eventName: eventNameOrOptions }
    : eventNameOrOptions);
exports.OnQueueError = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.ERROR }));
exports.OnQueueWaiting = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.WAITING }));
exports.OnQueueActive = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.ACTIVE }));
exports.OnQueueStalled = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.STALLED }));
exports.OnQueueProgress = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.PROGRESS }));
exports.OnQueueCompleted = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.COMPLETED }));
exports.OnQueueFailed = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.FAILED }));
exports.OnQueuePaused = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.PAUSED }));
exports.OnQueueResumed = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.RESUMED }));
exports.OnQueueCleaned = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.CLEANED }));
exports.OnQueueDrained = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.DRAINED }));
exports.OnQueueRemoved = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueEvents.REMOVED }));
exports.OnGlobalQueueError = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.ERROR }));
exports.OnGlobalQueueWaiting = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.WAITING }));
exports.OnGlobalQueueActive = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.ACTIVE }));
exports.OnGlobalQueueStalled = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.STALLED }));
exports.OnGlobalQueueProgress = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.PROGRESS }));
exports.OnGlobalQueueCompleted = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.COMPLETED }));
exports.OnGlobalQueueFailed = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.FAILED }));
exports.OnGlobalQueuePaused = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.PAUSED }));
exports.OnGlobalQueueResumed = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.RESUMED }));
exports.OnGlobalQueueCleaned = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.CLEANED }));
exports.OnGlobalQueueDrained = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.DRAINED }));
exports.OnGlobalQueueRemoved = (options) => exports.OnQueueEvent(Object.assign(Object.assign({}, options), { eventName: enums_1.BullQueueGlobalEvents.REMOVED }));
